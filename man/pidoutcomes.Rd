% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_bounds.R
\name{pidoutcomes}
\alias{pidoutcomes}
\title{Partial Identification of Conditional Expectations with Missing Outcomes}
\usage{
pidoutcomes(outformula, z, data, alpha = 0.95, ...)
}
\arguments{
\item{outformula}{A formula}

\item{z}{A column from your data that indicates missing outcomes, must be 0 or 1}

\item{data}{Your data}

\item{alpha}{The alpha significance level for the CI. Default is \code{alpha=.95}}

\item{...}{Other arguments accepted by \code{npreg}}
}
\value{
The function returns a list of 4 values: \code{lower_ci},
\code{lower}, \code{upper} and \code{upper_ci}, each a vector of
length \code{nrow(data)}. These are the lower and upper confidence
intervals on the location
of the parameter (as described in Manski and Imbens (2004)), and the
estimated lower and upper bounds of the partially identified conditional
mean
}
\description{
\code{pidoutcomes} computes the upper and lower bounds on the
conditional expectation function when there are missing outcomes.
It only works for a dependent variable scaled such that
\eqn{y \in (0,1)}.
It is based on the work of Manski (2007). Assume we want to estimate
\deqn{P(y|x) = P(y|x,z=1)P(z=1|x) + P(y|x,z=0)P(z=0|x),}
where \code{z} is a binary variable indicating missingness and
\code{y} is a binary outcome.
All of the quantities are identifiable from the data apart from
\eqn{P(y|x,z=0)} which is by definition unobservable. However,
this missing quantity cannot be less than zero or greater than
one so the absolute bounds on the conditional probability are
\deqn{P(y|x,z=1)P(z=1|x) \le P(y|x) \le P(y|x,z=1)P(z=1|x) + P(z=0|x).}
\code{pidoutcomes()} computes these upper and lower bounds.
}
\details{
We also compute confidence intervals based on Manski and Imbens (2004).
We focus on intervals that are guaranteed to cover the parameter
at the specified level, rather than intervals that are guaranteed to
cover the bounds at the specified level.
}
\examples{
#' N <- 1000
x <- rnorm(N)
e <- rnorm(N)
y <- as.numeric(2*x + e > 0)
z <- rbinom(N, 1, .75)
y_obs <- z*y
df <- data.frame(y_obs, x, z)
m1 <- pidoutcomes(y_obs ~ x, z, df)
m1


}
